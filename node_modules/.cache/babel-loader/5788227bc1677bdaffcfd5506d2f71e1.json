{"ast":null,"code":"var _jsxFileName = \"/home/giodev/Documents/Projects/Plivo Project/Plivo App/frontend/src/components/Cable.js\";\nimport React, { useEffect } from \"react\"; // import { ActionCableConsumer } from \"react-actioncable-provider\";\n\nconst Cable = ({\n  conversations,\n  handleReceivedMessage,\n  cableApp\n}) => {\n  useEffect(() => {\n    conversations.map(conversation => cableApp.conversations = cableApp.cable.subscriptions.create({\n      channel: \"MessagesChannel\",\n      conversation: conversation.id,\n      message: conversation\n    }, {\n      received: receivedMessage => {\n        console.log(\"received message\", receivedMessage);\n        handleReceivedMessage(receivedMessage);\n      }\n    }));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }) // <Fragment>\n  //   {conversations.map((conversation) => {\n  //     return (\n  //       <ActionCableConsumer\n  //         key={conversation.id}\n  //         channel={{\n  //           channel: \"MessagesChannel\",\n  //           conversation: conversation.id,\n  //         }}\n  //         onReceived={handleReceivedMessage}\n  //       />\n  //     );\n  //   })}\n  // </Fragment>\n  ;\n};\n\nexport default Cable;","map":{"version":3,"sources":["/home/giodev/Documents/Projects/Plivo Project/Plivo App/frontend/src/components/Cable.js"],"names":["React","useEffect","Cable","conversations","handleReceivedMessage","cableApp","map","conversation","cable","subscriptions","create","channel","id","message","received","receivedMessage","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,qBAAjB;AAAwCC,EAAAA;AAAxC,CAAD,KAAwD;AACpEJ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,aAAa,CAACG,GAAd,CACGC,YAAD,IACGF,QAAQ,CAACF,aAAT,GAAyBE,QAAQ,CAACG,KAAT,CAAeC,aAAf,CAA6BC,MAA7B,CACxB;AACEC,MAAAA,OAAO,EAAE,iBADX;AAEEJ,MAAAA,YAAY,EAAEA,YAAY,CAACK,EAF7B;AAGEC,MAAAA,OAAO,EAAEN;AAHX,KADwB,EAMxB;AACEO,MAAAA,QAAQ,EAAGC,eAAD,IAAqB;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,eAAhC;AACAX,QAAAA,qBAAqB,CAACW,eAAD,CAArB;AACD;AAJH,KANwB,CAF9B;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfF;AAiBD,CArCD;;AAuCA,eAAeb,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\n// import { ActionCableConsumer } from \"react-actioncable-provider\";\n\nconst Cable = ({ conversations, handleReceivedMessage, cableApp }) => {\n  useEffect(() => {\n    conversations.map(\n      (conversation) =>\n        (cableApp.conversations = cableApp.cable.subscriptions.create(\n          {\n            channel: \"MessagesChannel\",\n            conversation: conversation.id,\n            message: conversation,\n          },\n          {\n            received: (receivedMessage) => {\n              console.log(\"received message\", receivedMessage);\n              handleReceivedMessage(receivedMessage);\n            },\n          }\n        ))\n    );\n  }, []);\n\n  return (\n    <div></div>\n    // <Fragment>\n    //   {conversations.map((conversation) => {\n    //     return (\n    //       <ActionCableConsumer\n    //         key={conversation.id}\n    //         channel={{\n    //           channel: \"MessagesChannel\",\n    //           conversation: conversation.id,\n    //         }}\n    //         onReceived={handleReceivedMessage}\n    //       />\n    //     );\n    //   })}\n    // </Fragment>\n  );\n};\n\nexport default Cable;\n"]},"metadata":{},"sourceType":"module"}