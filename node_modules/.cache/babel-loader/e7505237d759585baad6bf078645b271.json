{"ast":null,"code":"var _jsxFileName = \"/home/giodev/Documents/Projects/New Test Project/twilio test app/twilio_app_frontend/src/components/ConversationsList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Button, Modal } from \"react-bootstrap\";\nimport * as constants from \"../constants\";\nimport NewConversationForm from \"./NewConversationForm\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\n\nconst ConversationsList = props => {\n  const [conversations, setConversations] = useState([]);\n  const [activeConversation, setActiveConversation] = useState(null);\n  const [logs, setLogs] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showDeleteConvoAlert, setShowDeleteConvoAlert] = useState(false);\n  const [convoToDelete, setConvoToDelete] = useState(\"\");\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n\n  const handleConvoLogs = (query, phone) => {\n    fetch(proxyUrl + constants.PLIVO_API_URL + `?limit=10&${query}=${phone}`, {\n      headers: {\n        Authorization: constants.PLIVO_BASIC_AUTH\n      }\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  useEffect(() => {\n    axios.get(`${constants.API_ROOT}/conversations`).then(response => {\n      setConversations(response.data);\n    });\n  }, [convoToDelete]);\n\n  const handleModalClose = () => {\n    setShow(false);\n    setLogs([]);\n  };\n\n  const handleModalShow = (query, phone) => {\n    handleConvoLogs(query, phone);\n    setShow(true);\n  };\n\n  const handleClick = id => {\n    setActiveConversation(id);\n  };\n\n  const handleReceivedConversation = response => {\n    setConversations([...conversations, response]);\n  };\n\n  const handleReceivedMessage = response => {\n    const {\n      message\n    } = response;\n    const receivedConversations = [...conversations];\n    const receivedConversation = receivedConversations.find(convo => convo.id === message.conversation_id);\n    receivedConversation.messages = [...receivedConversation.messages, message];\n    setConversations(receivedConversations);\n  };\n\n  const handleDeleteConvoAlert = () => {\n    setShowDeleteConvoAlert(true);\n  };\n\n  const handleConversationDelete = convoId => {\n    axios.delete(constants.API_ROOT + `/conversations/${convoId}`);\n  };\n\n  const mapConversations = (conversations, handleClick) => conversations.map(conversation => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: conversation.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => handleClick(conversation.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, conversation.title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, conversation.phone), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, conversation.messages.length, \" message(s)\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      onClick: () => {\n        handleModalShow(\"from_number\", conversation.phone);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Outgoing\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      onClick: () => {\n        handleModalShow(\"to_number\", conversation.phone);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Incoming\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => {\n        setConvoToDelete(conversation.id);\n        handleDeleteConvoAlert();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Delete\")));\n  });\n\n  const findActiveConversation = (conversations, activeConversation) => {\n    return conversations.find(conversation => conversation.id === activeConversation);\n  };\n\n  props.cableApp.cable.subscriptions.create({\n    channel: \"ConversationsChannel\"\n  }, {\n    received: receivedConversation => {\n      console.log(\"receivedConvo\", receivedConversation);\n      handleReceivedConversation(receivedConversation.conversation);\n    }\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, conversations.length ? /*#__PURE__*/React.createElement(Cable, {\n    cableApp: props.cableApp,\n    conversations: conversations,\n    handleReceivedMessage: handleReceivedMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Conversations\"), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    borderless: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Conversation Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Conversation Length\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Message Logs\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, mapConversations(conversations, handleClick))), /*#__PURE__*/React.createElement(NewConversationForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), activeConversation ? /*#__PURE__*/React.createElement(MessagesArea, {\n    conversation: findActiveConversation(conversations, activeConversation),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }) : null, /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Modal heading\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, \"Logs\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, logs))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"Close\"))), /*#__PURE__*/React.createElement(Modal, {\n    show: showDeleteConvoAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Delete Confirmation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, \"Are you sure you want to delete this conversation?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    variant: \"outline-danger\",\n    onClick: () => {\n      handleConversationDelete(convoToDelete);\n      setShowDeleteConvoAlert(false);\n      setConvoToDelete(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    variant: \"outline-secondary\",\n    onClick: () => {\n      setShowDeleteConvoAlert(false);\n      setConvoToDelete(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, \"No\"))));\n};\n\nexport default ConversationsList;","map":{"version":3,"sources":["/home/giodev/Documents/Projects/New Test Project/twilio test app/twilio_app_frontend/src/components/ConversationsList.js"],"names":["React","useState","useEffect","axios","Container","Table","Button","Modal","constants","NewConversationForm","MessagesArea","Cable","ConversationsList","props","conversations","setConversations","activeConversation","setActiveConversation","logs","setLogs","show","setShow","showDeleteConvoAlert","setShowDeleteConvoAlert","convoToDelete","setConvoToDelete","proxyUrl","handleConvoLogs","query","phone","fetch","PLIVO_API_URL","headers","Authorization","PLIVO_BASIC_AUTH","then","response","console","log","get","API_ROOT","data","handleModalClose","handleModalShow","handleClick","id","handleReceivedConversation","handleReceivedMessage","message","receivedConversations","receivedConversation","find","convo","conversation_id","messages","handleDeleteConvoAlert","handleConversationDelete","convoId","delete","mapConversations","map","conversation","title","length","findActiveConversation","cableApp","cable","subscriptions","create","channel","received"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Button, Modal } from \"react-bootstrap\";\nimport * as constants from \"../constants\";\nimport NewConversationForm from \"./NewConversationForm\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\n\nconst ConversationsList = (props) => {\n  const [conversations, setConversations] = useState([]);\n  const [activeConversation, setActiveConversation] = useState(null);\n  const [logs, setLogs] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showDeleteConvoAlert, setShowDeleteConvoAlert] = useState(false);\n  const [convoToDelete, setConvoToDelete] = useState(\"\");\n\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n\n  const handleConvoLogs = (query, phone) => {\n    fetch(proxyUrl + constants.PLIVO_API_URL + `?limit=10&${query}=${phone}`, {\n      headers: {\n        Authorization: constants.PLIVO_BASIC_AUTH,\n      },\n    }).then((response) => {\n      console.log(response);\n    });\n  };\n\n  useEffect(() => {\n    axios.get(`${constants.API_ROOT}/conversations`).then((response) => {\n      setConversations(response.data);\n    });\n  }, [convoToDelete]);\n\n  const handleModalClose = () => {\n    setShow(false);\n    setLogs([]);\n  };\n  const handleModalShow = (query, phone) => {\n    handleConvoLogs(query, phone);\n    setShow(true);\n  };\n\n  const handleClick = (id) => {\n    setActiveConversation(id);\n  };\n\n  const handleReceivedConversation = (response) => {\n    setConversations([...conversations, response]);\n  };\n\n  const handleReceivedMessage = (response) => {\n    const { message } = response;\n    const receivedConversations = [...conversations];\n    const receivedConversation = receivedConversations.find(\n      (convo) => convo.id === message.conversation_id\n    );\n    receivedConversation.messages = [...receivedConversation.messages, message];\n    setConversations(receivedConversations);\n  };\n\n  const handleDeleteConvoAlert = () => {\n    setShowDeleteConvoAlert(true);\n  };\n\n  const handleConversationDelete = (convoId) => {\n    axios.delete(constants.API_ROOT + `/conversations/${convoId}`);\n  };\n\n  const mapConversations = (conversations, handleClick) =>\n    conversations.map((conversation) => {\n      return (\n        <tr key={conversation.id}>\n          <td onClick={() => handleClick(conversation.id)}>\n            {conversation.title}\n          </td>\n          <td>{conversation.phone}</td>\n          <td>{conversation.messages.length} message(s)</td>\n          <td>\n            <Button\n              size=\"sm\"\n              variant=\"info\"\n              onClick={() => {\n                handleModalShow(\"from_number\", conversation.phone);\n              }}\n            >\n              Outgoing\n            </Button>{\" \"}\n            <Button\n              size=\"sm\"\n              variant=\"success\"\n              onClick={() => {\n                handleModalShow(\"to_number\", conversation.phone);\n              }}\n            >\n              Incoming\n            </Button>\n          </td>\n          <td>\n            <Button\n              variant=\"danger\"\n              size=\"sm\"\n              onClick={() => {\n                setConvoToDelete(conversation.id);\n                handleDeleteConvoAlert();\n              }}\n            >\n              Delete\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n\n  const findActiveConversation = (conversations, activeConversation) => {\n    return conversations.find(\n      (conversation) => conversation.id === activeConversation\n    );\n  };\n\n  props.cableApp.cable.subscriptions.create(\n    {\n      channel: \"ConversationsChannel\",\n    },\n    {\n      received: (receivedConversation) => {\n        console.log(\"receivedConvo\", receivedConversation);\n        handleReceivedConversation(receivedConversation.conversation);\n      },\n    }\n  );\n\n  return (\n    <Container>\n      {conversations.length ? (\n        <Cable\n          cableApp={props.cableApp}\n          conversations={conversations}\n          handleReceivedMessage={handleReceivedMessage}\n        />\n      ) : null}\n      <h2>Conversations</h2>\n      <Table striped borderless hover>\n        <thead>\n          <tr>\n            <th>Conversation Name</th>\n            <th>Phone Number</th>\n            <th>Conversation Length</th>\n            <th>Message Logs</th>\n          </tr>\n        </thead>\n        <tbody>{mapConversations(conversations, handleClick)}</tbody>\n      </Table>\n      <NewConversationForm />\n      {activeConversation ? (\n        <MessagesArea\n          conversation={findActiveConversation(\n            conversations,\n            activeConversation\n          )}\n        />\n      ) : null}\n\n      <Modal show={show} onHide={handleModalClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table>\n            <thead>\n              <tr>\n                <th>Logs</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{logs}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleModalClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showDeleteConvoAlert}>\n        <Modal.Header>\n          <Modal.Title>Delete Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this conversation?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            size=\"sm\"\n            variant=\"outline-danger\"\n            onClick={() => {\n              handleConversationDelete(convoToDelete);\n              setShowDeleteConvoAlert(false);\n              setConvoToDelete(\"\");\n            }}\n          >\n            Yes\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline-secondary\"\n            onClick={() => {\n              setShowDeleteConvoAlert(false);\n              setConvoToDelete(\"\");\n            }}\n          >\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default ConversationsList;\n"]},"metadata":{},"sourceType":"module"}